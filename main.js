!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function n(t){var n=function(t,n){if("object"!=e(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}var r=function(){return e=function e(t,n,r,o){var i=r.handleCardClick,u=r.handlerDeleteCard,a=r.handlerAddLike,c=r.handlerRemoveLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._likes=t.likes||0,this._id=t._id,this._owner=t.owner,this._currentUser=o,this._templateSelector=n,this._handleCardClick=i,this._handlerDeleteCard=u,this._handlerAddLike=a,this._handlerRemoveLike=c},(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"_setEventListeners",value:function(e){var t=this,n=e.querySelector(".element__trash"),r=e.querySelector(".element__button_liked"),o=e.querySelector(".element__image");n.addEventListener("click",(function(){t._handlerDeleteCard(e,t._id)})),r.addEventListener("click",(function(){t._hasLikeOwner()?t._handlerRemoveLike(t._id).then((function(n){t._likes=n.likes,e.querySelector(".element__likes-count").textContent=t._likes.length,r.classList.add("element__button_liked")})):t._handlerAddLike(t._id).then((function(n){t._likes=n.likes,e.querySelector(".element__likes-count").textContent=t._likes.length,r.classList.remove("element__button_liked")}))})),o.addEventListener("click",(function(){t._handleCardClick(t._name,t._link)}))}},{key:"_hasLikeOwner",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._currentUser._id}))}},{key:"_isMe",value:function(){return this._owner._id===this._currentUser._id}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._element.querySelector(".element__image").src=this._link,this._element.querySelector(".element__image").alt=this._name,this._element.querySelector(".element__place").textContent=this._name,this._element.querySelector(".element__likes-count").textContent=this._likes.length,this._setEventListeners(this._element),this._hasLikeOwner()&&this._element.querySelector(".element__button_liked").classList.remove("element__button_liked"),this._isMe()||this._element.querySelector(".element__trash").remove(),this._element}}])&&t(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,u(r.key),r)}}function u(e){var t=function(e,t){if("object"!=o(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==o(t)?t:t+""}var a=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._settings=t,this._formElement=n},(t=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._settings.inputErrorClass),n.textContent=t,n.classList.add(this._settings.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._settings.inputErrorClass),t.textContent="",t.classList.remove(this._settings.errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_toggleButtonState",value:function(){var e=this._inputList.every((function(e){return e.validity.valid})),t=this._inputList.some((function(e){return""!==e.value.trim()})),n=this._formElement.querySelector(this._settings.submitButtonSelector);e&&t?(n.classList.remove(this._settings.inactiveButtonClass),n.disabled=!1):(n.classList.add(this._settings.inactiveButtonClass),n.disabled=!0)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))})),this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._toggleButtonState()}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&i(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,s(r.key),r)}}function s(e){var t=function(e,t){if("object"!=c(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==c(t)?t:t+""}var f=function(){return e=function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.items=r,this.renderer=o,this.container=document.querySelector(n)},(t=[{key:"rendererItems",value:function(){var e=this;this.items.forEach((function(t){e.renderer(t)}))}},{key:"addItem",value:function(e){this.container.appendChild(e)}}])&&l(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,m(r.key),r)}}function m(e){var t=function(e,t){if("object"!=p(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=p(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==p(t)?t:t+""}var d=function(){return e=function e(t){var n,r,o,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),n=this,o=function(e){"Escape"===e.key&&i.close()},(r=m(r="_handleEscClose"))in n?Object.defineProperty(n,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[r]=o,this._popup=document.querySelector(t)},(t=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup")||t.target.classList.contains("popup__container-close-button-image"))&&e.close()}))}}])&&y(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,b(r.key),r)}}function b(e){var t=function(e,t){if("object"!=v(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=v(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==v(t)?t:t+""}function _(e,t,n){return t=k(t),function(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,g()?Reflect.construct(t,n||[],k(e).constructor):t.apply(e,n))}function g(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(g=function(){return!!e})()}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},S.apply(this,arguments)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}function E(e,t){return E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},E(e,t)}var w=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=_(this,t,[e]))._popupImage=n._popup.querySelector(".image-popup__image"),n._popupTitle=n._popup.querySelector(".image-popup__title"),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(t,e),n=t,(r=[{key:"open",value:function(e,n){S(k(t.prototype),"open",this).call(this),this._popupImage.src=e,this._popupImage.alt=n,this._popupTitle.textContent=n,this._popup.style.display="block"}},{key:"close",value:function(){S(k(t.prototype),"close",this).call(this),this._popup.style.display="none"}},{key:"setEventListeners",value:function(){var e=this;S(k(t.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("click",(function(t){(t.target.classList.contains("image-popup")||t.target.classList.contains("image-popup__content")||t.target.classList.contains("image-popup__close-button-icon"))&&e.close()}))}}])&&h(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(d);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,L(r.key),r)}}function L(e){var t=function(e,t){if("object"!=j(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=j(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==j(t)?t:t+""}function P(e,t,n){return t=I(t),function(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,C()?Reflect.construct(t,n||[],I(e).constructor):t.apply(e,n))}function C(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(C=function(){return!!e})()}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},q.apply(this,arguments)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}function T(e,t){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},T(e,t)}var B=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=P(this,t,[e]))._submitCallback=n,r._form=r._popup.querySelector(".form"),r._inputList=r._form.querySelectorAll(".form__input"),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&T(e,t)}(t,e),n=t,(r=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;q(I(t.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._form.querySelector(".form__submit").textContent="Guardando...",e._submitCallback(e._getInputValues()).then((function(){e._form.querySelector(".form__submit").textContent="Guardar"})).finally((function(){t.target.reset(),e.close()}))}))}},{key:"close",value:function(){q(I(t.prototype),"close",this).call(this),this._form.reset()}}])&&O(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(d);function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,x(r.key),r)}}function x(e){var t=function(e,t){if("object"!=U(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=U(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==U(t)?t:t+""}var A=function(){return e=function e(t){var n=t.nameSelector,r=t.roleSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._roleElement=document.querySelector(r),this._avatarElement=document.querySelector(o)},(t=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,role:this._roleElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._nameElement.textContent=t,this._roleElement.textContent=n}},{key:"setUserAvatar",value:function(e){this._avatarElement.src=e}}])&&R(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,M(r.key),r)}}function M(e){var t=function(e,t){if("object"!=D(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==D(t)?t:t+""}function N(e,t,n){return t=H(t),function(e,t){if(t&&("object"===D(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,J()?Reflect.construct(t,n||[],H(e).constructor):t.apply(e,n))}function J(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(J=function(){return!!e})()}function G(){return G="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=H(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},G.apply(this,arguments)}function H(e){return H=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},H(e)}function z(e,t){return z=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},z(e,t)}var F=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=N(this,t,[e]))._confirmCallback=n,r._yesButton=r._popup.querySelector(".popup__confirm-button_yes"),r._noButton=r._popup.querySelector(".popup__confirm-button_no"),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&z(e,t)}(t,e),n=t,(r=[{key:"setEventListeners",value:function(){var e=this;G(H(t.prototype),"setEventListeners",this).call(this),this._yesButton.addEventListener("click",(function(){e._confirmCallback(),e.close()})),this._noButton.addEventListener("click",(function(){e.close()}))}}])&&V(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(d);function K(e){return K="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},K(e)}function Q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,W(r.key),r)}}function W(e){var t=function(e,t){if("object"!=K(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=K(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==K(t)?t:t+""}var X=new(function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers},(t=[{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"removeLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateUserInfo",value:function(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&Q(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}())({baseUrl:"https://around.nomoreparties.co/v1/web_es_12",headers:{authorization:"41f14ad4-27da-40cd-a7c6-47b18a7a7e9f","Content-Type":"application/json"}}),Y=(document.getElementById("popup"),document.querySelector(".profile__name")),Z=document.querySelector(".profile__role"),$=document.getElementById("editButton"),ee=document.getElementById("addButton"),te=(document.getElementById("closeEditButton"),document.getElementById("saveEditButton"),document.getElementById("closeCardButton"),document.getElementById("saveCardButton"),document.querySelector(".elements")),ne=document.querySelector(".profile__avatar"),re={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"},oe=null,ie=null;function ue(e,t){me.open(t,e)}X.getUserInfo().then((function(e){return ie=e,he.setUserInfo(e),he.setUserAvatar(e.avatar),X.getInitialCards()})).then((function(e){(oe=new f({items:e,renderer:function(e){var t=new r(e,".template",{handleCardClick:ue,handlerDeleteCard:function(e,t){be={cardElement:e,_id:t},_e.open()},handlerAddLike:function(e){return X.addLike(e)},handlerRemoveLike:function(e){return X.removeLike(e)}},ie),n=t.generateCard();oe.addItem(n)}},".elements")).rendererItems()}));var ae=document.getElementById("form-profile"),ce=document.querySelector(".popup_tarjeta form"),le=document.querySelector(".popup_avatar form"),se=new a(re,ae),fe=new a(re,ce),pe=new a(re,le);se.enableValidation(),fe.enableValidation(),pe.enableValidation();var ye=new d(".popup");ye.setEventListeners(),ye.open(),ye.close();var me=new w(".image-popup");me.setEventListeners();var de=new B(".popup",(function(e){var t=e.name,n=e.about;return X.updateUserInfo({name:t,about:n}).then((function(e){he.setUserInfo({name:t,about:n})}))}));de.setEventListeners();var ve=new B(".popup_tarjeta",(function(e){var t=e.title,n=e.url;return X.addCard({name:t,link:n}).then((function(e){var t=new r(e,".template",{handleCardClick:ue,handlerDeleteCard:function(e,t){be={cardElement:e,_id:t},_e.open()},handlerAddLike:function(e){return X.addLike(e)},handlerRemoveLike:function(e){return X.removeLike(e)}},ie).generateCard();te.prepend(t)}))}));ve.setEventListeners();var he=new A({nameSelector:".profile__name",roleSelector:".profile__role",avatarSelector:".profile__avatar-image"});ee.addEventListener("click",(function(){titleInput.value="",urlInput.value="",ve.open()})),$.addEventListener("click",(function(){nameInput.value=Y.textContent,aboutMeInput.value=Z.textContent,de.open()}));var be=null,_e=new F("#confirmPopup",(function(){be&&X.deleteCard(be._id).then((function(){be.cardElement.remove(),console.log("Tarjeta eliminada")}))}));_e.setEventListeners(),document.querySelectorAll(".element__trash").forEach((function(e){e.addEventListener("click",(function(){_e.open()}))}));var ge=new B(".popup_avatar",(function(e){var t=e.avatar;return X.updateAvatar({avatar:t}).then((function(e){he.setUserAvatar(e.avatar)}))}));ge.setEventListeners(),ne.addEventListener("click",(function(){ge.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,